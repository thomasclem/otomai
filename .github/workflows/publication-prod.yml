name: Build & Publish Prod

on:
  release:
    types:
      - created
      - published

jobs:
  build-and-publish:
    name: Build and Publish Wheel & Docker Image
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ap-northeast-1"
      IMAGE_NAME: "otomai-bot"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "2.0.0"

      - name: Build wheel file
        run: |
          poetry build -f wheel
          ls dist/

      - name: Upload wheel to AWS S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: ""
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: "prod-otomai-bot"
          SOURCE_DIR: "dist/"
          DEST_DIR: "releases/"

      - name: Build Docker image
        run: >
          WHEEL_FILE=$(ls dist/*.whl) &&
          docker build --build-arg WHEEL_FILE=$WHEEL_FILE
          -t ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} .

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-1

      - name: Tag and Push Docker image to ECR
        run: >
          ECR_REGISTRY="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" &&
          docker tag ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          $ECR_REGISTRY/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} &&
          docker push $ECR_REGISTRY/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
